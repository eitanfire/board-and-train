/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/admin'
import { Route as WelcomePageImport } from './routes/WelcomePage'
import { Route as BoardAndTrainFormImport } from './routes/BoardAndTrainForm'
import { Route as AboutPageImport } from './routes/AboutPage'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const WelcomePageRoute = WelcomePageImport.update({
  id: '/WelcomePage',
  path: '/WelcomePage',
  getParentRoute: () => rootRoute,
} as any)

const BoardAndTrainFormRoute = BoardAndTrainFormImport.update({
  id: '/BoardAndTrainForm',
  path: '/BoardAndTrainForm',
  getParentRoute: () => rootRoute,
} as any)

const AboutPageRoute = AboutPageImport.update({
  id: '/AboutPage',
  path: '/AboutPage',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/AboutPage': {
      id: '/AboutPage'
      path: '/AboutPage'
      fullPath: '/AboutPage'
      preLoaderRoute: typeof AboutPageImport
      parentRoute: typeof rootRoute
    }
    '/BoardAndTrainForm': {
      id: '/BoardAndTrainForm'
      path: '/BoardAndTrainForm'
      fullPath: '/BoardAndTrainForm'
      preLoaderRoute: typeof BoardAndTrainFormImport
      parentRoute: typeof rootRoute
    }
    '/WelcomePage': {
      id: '/WelcomePage'
      path: '/WelcomePage'
      fullPath: '/WelcomePage'
      preLoaderRoute: typeof WelcomePageImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/AboutPage': typeof AboutPageRoute
  '/BoardAndTrainForm': typeof BoardAndTrainFormRoute
  '/WelcomePage': typeof WelcomePageRoute
  '/admin': typeof AdminRoute
}

export interface FileRoutesByTo {
  '/AboutPage': typeof AboutPageRoute
  '/BoardAndTrainForm': typeof BoardAndTrainFormRoute
  '/WelcomePage': typeof WelcomePageRoute
  '/admin': typeof AdminRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/AboutPage': typeof AboutPageRoute
  '/BoardAndTrainForm': typeof BoardAndTrainFormRoute
  '/WelcomePage': typeof WelcomePageRoute
  '/admin': typeof AdminRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/AboutPage' | '/BoardAndTrainForm' | '/WelcomePage' | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to: '/AboutPage' | '/BoardAndTrainForm' | '/WelcomePage' | '/admin'
  id:
    | '__root__'
    | '/AboutPage'
    | '/BoardAndTrainForm'
    | '/WelcomePage'
    | '/admin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutPageRoute: typeof AboutPageRoute
  BoardAndTrainFormRoute: typeof BoardAndTrainFormRoute
  WelcomePageRoute: typeof WelcomePageRoute
  AdminRoute: typeof AdminRoute
}

const rootRouteChildren: RootRouteChildren = {
  AboutPageRoute: AboutPageRoute,
  BoardAndTrainFormRoute: BoardAndTrainFormRoute,
  WelcomePageRoute: WelcomePageRoute,
  AdminRoute: AdminRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/AboutPage",
        "/BoardAndTrainForm",
        "/WelcomePage",
        "/admin"
      ]
    },
    "/AboutPage": {
      "filePath": "AboutPage.tsx"
    },
    "/BoardAndTrainForm": {
      "filePath": "BoardAndTrainForm.tsx"
    },
    "/WelcomePage": {
      "filePath": "WelcomePage.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
